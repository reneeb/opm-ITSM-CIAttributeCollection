# $Id: USAGE_itsm-ciattributecollection.pod,v 1.26 2016/02/11 10:58:54 tto Exp $

=head1 Usage Information

This package provides additional ITSM-CI-attributes for OTOBO::ITSM, i.e. ITSMConfigurationManagement. Following you'll find a short documentation on the use and features of this extension.

Please read the PDF-documentation included in this package for more information.

=head2 Why not using VirtualFileSystem?

Virtual file system proved to be not suitable, since it builds some sort of directory path out of object-class and id. Thus it would require to know the CIs version ID before it's actually created. If this could be solved somehow, copying a CI with an attachment would also cause a copy of the attachment itself, which is not desirable from our point of view.


=head2 Autocomplete function for attribute types

=over 4

=item * behaves similar to customer user autocomplete function

=item * applies to Queue-, Service-, CIclass-Reference, Users, CIACCustomerCompany and CustomerUserCompany

=item * activation can be configured in SysConfig

=back

=head2 (i) Use of the CI-Attribute "CIClassReference"

=over 4

=item * behaves similar to customer user attribute but refers to another config item of some CI-class

=item * allows to automatically delete and create links to CIs of a referenced class

=item * eases the configuration of assembled config items, which consist (in parts) of other config items without annoying manual link creation

=item * attribute definition requires three additional attributes:

=over 4

=item * ReferencedCIClassName or ReferencedCIClassID: defines the referenced CI-class

=item * ReferencedCIClassLinkType: defines the link type which should be used for automatic link creation and deletion, no link will be created if empty

=item * ReferencedCIClassLinkDirection: set to "Reverse" if you want to create a reverse link for directed link types (will only be relevant if ReferencedCIClassLinkType is set)

=item * ReferencedCIClassReferenceAttributeKey: defines the referenced attribute key which should be used as identifier during the import.

=item * SearchInputType: defines the input type for the cmdb search mask. Can be 'AutoComplete' or 'Pattern'. If nothing or something wrong is set, 'AutoComplete' is used. 'Pattern' allows to search for several relevant configitems by name (* allowed as wildcard), by number (starts with '[Number]' followed by digest. * allowed as wildcard) and by id (starts with '[ID]' followed by digest). Multiple entries can be separated by '||'.

=back

=item * IMPORTANT NOTE: The "Key" attribute has to be a UNIQUE name within the class definition!

=item * IMPORTANT NOTE: Do NOT use non-alphanumeric characters in "Key" attribute!

=item * IMPORTANT NOTE: If the CI will be edited using the edit-dialog all Links of the defined type will be deleted and set according to the CI-Attribute.

=back

=head3 EXAMPLE

    - Key: Location
      Name: Asset Location
      Searchable: 1
      Input:
        Type: CIClassReference
        ReferencedCIClassName: Location
        ReferencedCIClassLinkType: Includes
        ReferencedCIClassLinkDirection: Reverse
        ReferencedCIClassReferenceAttributeKey: SerialNumber
        SearchInputType: AutoComplete


=head2 (ii) Use of the CI-Attribute "ServiceReference"

=over 4

=item * behaves similar to customer user attribute but refers to a service

=item * allows to automatically delete and create links to Services

=item * attribute definition requires two additional attributes:

=over 4

=item * ReferencedServiceLinkType: defines the link type which should be used for automatic link creation and deletion, no link will be created if empty

=item * ReferencedServiceLinkDirection: set to "Reverse" if you want to create a reverse link for directed link types (will only be relevant if ReferencedServiceLinkType is set)

=back

=item * IMPORTANT NOTE: If the CI will be edited using the edit-dialog all Links of the defined type will be deleted and set according to the CI-Attribute

=item * IMPORTANT NOTE: If alle ServiceReferences in the CI-edit-dialog will be deleted (while Using Array-Elements) the Links will not be deleted

=item * IMPORTANT NOTE: The "Key" attribute has to be a UNIQUE name within the class definition!

=back

=head3 EXAMPLE:

    - Key: AssignedService
      Name: Assigned Service
      Searchable: 1
      Input:
        Type: ServiceReference
        ReferencedServiceLinkType: RelevantTo
        ReferencedServiceLinkDirection: Normal

=head2 (iii) Use of the CI-Attribute "QueueReference"

=over 4

=item * behaves similar to customer user attribute but refers to a queue

=back

=head3  EXAMPLE:

    - Key: AssignedQueue
      Name: Assigned Queue
      Searchable: 1
      Input:
        Type: QueueReference

=head2 (iv) Use of the CI-Attribute "CIAttachment"

=over 4

=item * In contrast to standard OTRS CI-attachments, this attribute behaves much more like a common CI-attribute than the default CI-attachments (and had been there before standard attachments). Attachments are not limited to the maximum of 25 attachments, in fact you may define the number of allowed attachments and also make it a required attribute. Attachment files are bound to the version of a CI. Thus changing the attachment preserves it's previous version and causes the creation of a new CI-version.

=item * see following SysConfig options for further configuration

=over 4

=item * AttachmentStorage::StorageBackendModules

=item * AttachmentStorage::DefaultStorageBackendModule

=item * Frontend::Module###AgentAttachmentStorage

=item * AttachmentStorageFS::StorageDirectory

=item * ITSMCIAttributeCollection::AttachementMD5Check

=item * ITSMCIAttributeCollection::AttachementSizeCheck

=back

=item * IMPORTANT NOTE: The attributes CountMin and CountMax must always be defined! Otherwise you won't be able to delete attachments from CIs. If you set CountMin => 1, it will be impossible to delete the last attachment (the last n attachments for CountMin => n).

=item * ADVICE: don't use this attribute in ITSMConfigItem Overview (KIX4OTRS or ITSMConfigItem::Frontend::AgentITSMConfigItem###ShowColumnsByClass)

=back

=head3  EXAMPLE:

    - Key: Attachment
      Name: Attachment
      Searchable: 1
      Input:
        Size: 50
        MaxLength: 50
        Type: CIAttachment
      CountMin: 0
      CountMax: 1

=head2 (v) Use of the CI-Attribute "User"

=over 4

=item * behaves similar to customer user attribute but refers to a user/agent

=back

=head3  EXAMPLE:

    - Key: Responsible
      Name: Responsible
      Searchable: 1
      Input:
        Type: User

=head2 (vi) Use of the CI-Attribute "CustomerUserCompany"

=over 4

=item * behaves similar to customer user attribute but refers to a CustomerCompany

=item * look up in all CustomerDatas for CustomerCompany

=back

=head3  EXAMPLE:

    - Key: CustomerUserCompany
      Name: CustomerUserCompany
      Searchable: 1
      Input:
        Type: CustomerUserCompany

=head2 (vii) Use of the CI-Attribute "CIACCustomerCompany" (f.k.a. "CustomerCompany")

=over 4

=item * behaves similar to customer user attribute but refers to a Customer Company

=item * look up in CustomerCompany-Backend

=item * attribute type renamed in r2.0.1 from "CustomerCompany" to "CIACCustomerCompany", since OTRS::ITSM 3.1.6 introduced a similar attribute type

=back

=head3  EXAMPLE:

    - Key: CustomerCompany
      Name: CustomerCompany
      Searchable: 1
      Input:
        Type: CIACCustomerCompany

=head2 (viii) Use of the CI-Attribute "EncryptedText"

=over 4

=item * allows to deposite passwords

=item * change and display of password only possible for the configured groups

=back

=head3  EXAMPLE:

    - Key: Password
      Name: Password
      Group:
        admin: 1
        groupname: 1
      Input:
        Type: EncryptedText
        Size: 50
        MaxLength: 100

=head2 (ix) Use of the CI-Attribute "LinkText"

=over 4

=item * allows to define a text that should be used in a configured link

=item * attribute URL must be defined and should contain the phrase "<VALUE>" which will be replaced with the given content

=item * this can be used to easily provide links to system monitoring tools or printer management interfaces

=item * ADVICE: don't use this attribute in ITSMConfigItem Overview (KIX4OTRS or ITSMConfigItem::Frontend::AgentITSMConfigItem###ShowColumnsByClass)

=back

=head3  EXAMPLE:

    - Key: TextLink
      Name: Text Link
      Searchable: 1
      Input:
          Type: TextLink
          Size: 50
          MaxLength: 100
          URL: http://www.example.com/<VALUE>

=head2 (x) Use of the CI-Attribute "DynamicField"

=over 4

=item * allows to use values of dropdown/single selection dynamic fields in config items


=back

=head3  EXAMPLE:

    - Key: Impact
      Name: Impact
      Searchable: 1
      Input:
        Type: DynamicField
        Name: TicketFreeText14
        Translation:1

=head2 (xi) Use of the CI-Attribute "TicketReference"

=over 4

=item * behaves similar to customer user attribute but refers to a ticket

=item * allows to automatically delete and create links to Services

=item * provideds direct link to referenced ticket

=item * attribute definition requires two additional attributes:

=over 4

=item * ReferencedTicketLinkType: defines the link type which should be used for automatic link creation and deletion, no link will be created if empty

=item * ReferencedTicketLinkDirection: set to "Reverse" if you want to create a reverse link for directed link types (will only be relevant if ReferencedTicketLinkType is set)

=back

=item * IMPORTANT NOTE: The "Key" attribute has to be a UNIQUE name within the class definition!

=back

=head3 EXAMPLE:

    - Key: RelatedTicket
      Name: Related Ticket
      Searchable: 1
      Input:
        Type: TicketReference
        ReferencedTicketLinkType: RelevantTo
        ReferencedTicketLinkDirection: Normal

=head2 (xii) Use of the CI-Attribute "TypeReference"

=over 4

=item * behaves similar to customer user attribute but refers to a ticket type

=back

=head3 EXAMPLE:

    - Key: TicketType
      Name: Ticket Type
      Searchable: 1
      Input:
        Type: TypeReference

=head2 (xiii) Use of the CI-Attribute "SLAReference"

=over 4

=item * behaves similar to service attribute but refers to an SLA and doesn't create links to SLAs

=item * additional (optional) attributes:

=over 4

=item * ReferencedServiceAttrKey: defines dependency to an attribute of type "ServiceReference" form the current CI Class Definition. If configured, the value of the attribute with the given key will be used to filter the SLAs: Only SLAs that are configured for the given Service will be shown.

=item * ReferencedCustomerLogin: defines dependency to an attribute of type "Customer" form the current CI Class Definition. If configured, the value of the attribute with the given key will be used to filter the SLAs: Only SLAs for the Services that are available for the given customer will be shown.

=item * ReferencedCustomerCompany: defines dependency to an attribute of type "CIACCustomerCompany" form the current CI Class Definition. If configured, the value of the attribute with the given key will be used to filter the SLAs: Only SLAs available for the given CustomerID will be shown.

=back

=item * IMPORTANT NOTE: If the referenced field does not exist or is empty, no SLAs will be found and only SLAs that are configured for DEFAULT services will be shown.

=item * IMPORTANT NOTE: If the referenced attribute is an array-attribut, SLAs for each referenced value will be found and only the intersection of these result sets will be shown. If SLAReference attribute is a sub-attribute of the referenced service- or customer(company) attribute, only the value of the superordinate attribute will be used.

=item * IMPORTANT NOTE: For the fields of type "SLAReference" it is important to set the CountMin => 0 and CountDefault => 0 and to add these fields with the "+" button only AFTER all referenced fields (Service, CustomerUser, CustomerCompany) are filled with values. Otherwise the values of the referenced fields will be ignored!

=item * IMPORTANT NOTE: To use  ReferencedCustomerCompanyattribute you need to install KIXServiceCatalog! If dependency to a CustomerUser (ReferencedCustomerLogin) is also configured, the ReferencedCustomerCompany will be ignored! Only one of these references can be used.

=back

=head3 EXAMPLE:

    - Key: ResponsibleUser
      Name: Responsible User
      Searchable: 1
      Input:
          Type: Customer

    - Key: AssignedService
      Name: Assigned Service
      Searchable: 1
      Input:
        Type: ServiceReference
        ReferencedServiceLinkType: RelevantTo
        ReferencedServiceLinkDirection: Normal
      CountMin: 0
      CountMax: 10
      CountDefault: 1
      Sub:
        - Key: AssignedSLA
          Name: Assigned SLA
          Searchable: 1
          Input: {
            Type: SLAReference
            ReferencedServiceAttrKey: AssignedService
            ReferencedCustomerLogin: ResponsibleUser
          CountMin: 0
          CountMax: 10
          CountDefault: 0

=head1 COPYRIGHT

Copyright (C) 2006-2016 c.a.p.e. IT GmbH, http://www.cape-it.de/

Copyright (C) 2017-2021 Perl-Services.de, https://www.perl-services.de/

The following persons have contributed to this extension:

=over 4

=item * Torsten(dot)Thau

=item * Martin(dot)Balzarek

=item * Frank(dot)Oberender

=item * Anna(dot)Litvinova

=item * Stefan(dot)Mehlig

=item * Mario(dot)Illinger

=item * Andreas(dot)Hergert

=back

This software comes with ABSOLUTELY NO WARRANTY. For details, see the enclosed file COPYING for license information (AGPL). If you did not receive this file, see http://www.gnu.org/licenses/agpl.txt.

=cut
